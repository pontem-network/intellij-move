<idea-plugin
    require-restart="true"
>
  <id>org.move.lang</id>
  <name>Move on Aptos</name>

  <vendor>Pontem</vendor>

  <description>
    <![CDATA[
            <p>Support for Move on Aptos, smart-contract language for Aptos and other blockchains.</p>

            <p><a href="https://github.com/pontem-network/intellij-move">https://github.com/pontem-network/intellij-move</a></p>
        ]]>
  </description>

  <resource-bundle>messages.MvBundle</resource-bundle>

  <depends>com.intellij.modules.platform</depends>
  <depends>org.toml.lang</depends>

  <extensions defaultExtensionNs="com.intellij">

    <fileType name="APTOS_BYTECODE"
              extensions="mv"
              implementationClass="org.move.bytecode.AptosBytecodeFileType"
              fieldName="INSTANCE" />
    <filetype.decompiler filetype="APTOS_BYTECODE"
                         implementationClass="org.move.bytecode.AptosBytecodeDecompiler" />
    <editorNotificationProvider implementation="org.move.bytecode.AptosBytecodeNotificationProvider" />

    <fileType name="Move"
              language="Move"
              extensions="move"
              implementationClass="org.move.lang.MoveFileType"
              fieldName="INSTANCE" />

    <codeInsight.lineMarkerProvider language="Move"
                                    implementationClass="org.move.ide.lineMarkers.ItemSpecsLineMarkerProvider" />

    <!-- PSI managing -->

    <projectService serviceInterface="org.move.lang.core.psi.MvPsiManager"
                    serviceImplementation="org.move.lang.core.psi.MvPsiManagerImpl" />

    <projectService serviceImplementation="org.move.cli.settings.MvProjectSettingsService" />

    <!-- specifically to support named addresses in tests, does nothing in non-test environment -->
    <projectService serviceInterface="org.move.cli.tests.NamedAddressFromTestAnnotationService"
                    serviceImplementation="org.move.cli.tests.NamedAddressServiceImpl"
                    testServiceImplementation="org.move.cli.tests.NamedAddressServiceTestImpl" />

    <configurationType
        implementation="org.move.cli.runConfigurations.aptos.AptosCommandConfigurationType" />
    <configurationType
        implementation="org.move.cli.runConfigurations.aptos.AptosTransactionConfigurationType" />

    <runConfigurationProducer
        implementation="org.move.cli.runConfigurations.producers.aptos.AptosTestCommandConfigurationProducer" />
    <runConfigurationProducer
        implementation="org.move.cli.runConfigurations.producers.aptos.RunCommandConfigurationProducer" />
    <runConfigurationProducer
        implementation="org.move.cli.runConfigurations.producers.aptos.ViewCommandConfigurationProducer" />
    <runLineMarkerContributor language="Move"
                              implementationClass="org.move.ide.lineMarkers.CommandLineMarkerContributor" />

    <lang.parserDefinition language="Move"
                           implementationClass="org.move.lang.MoveParserDefinition" />

    <stubElementTypeHolder class="org.move.lang.MvElementTypes" externalIdPrefix="move." />

    <stubIndex implementation="org.move.lang.index.MvNamedElementIndex" />
    <stubIndex implementation="org.move.lang.index.MvEntryFunctionIndex" />
    <stubIndex implementation="org.move.lang.index.MvViewFunctionIndex" />
    <!--    <stubIndex implementation="org.move.lang.index.MvTestFunctionIndex" />-->
    <stubIndex implementation="org.move.lang.index.MvModuleIndex" />
    <stubIndex implementation="org.move.lang.index.MvModuleSpecIndex" />

    <platform.backend.documentation.psiTargetProvider
        implementation="org.move.ide.docs.MvPsiDocumentationTargetProvider" />

    <lang.importOptimizer language="Move" implementationClass="org.move.ide.refactoring.MvImportOptimizer" />

    <gotoSymbolContributor implementation="org.move.ide.navigation.goto.MvSymbolNavigationContributor" />
    <gotoClassContributor implementation="org.move.ide.navigation.goto.MvStructNavigationContributor" />

    <lang.syntaxHighlighter language="Move"
                            implementationClass="org.move.ide.MvHighlighter" />
    <lang.commenter language="Move"
                    implementationClass="org.move.ide.MvCommenter" />
    <lang.braceMatcher language="Move"
                       implementationClass="org.move.ide.typing.MvBraceMatcher" />
    <lang.quoteHandler language="Move"
                       implementationClass="org.move.ide.typing.MvQuoteHandler" />
    <typedHandler implementation="org.move.ide.typing.MvAngleBraceTypedHandler"
                  id="MvAngleBracketsHandler" />
    <typedHandler implementation="org.move.ide.typing.MoveTextFieldTypedHandler"
                  id="MoveTextFieldTypedHandler" />
    <typedHandler implementation="org.move.ide.typing.MvTypedHandler"
                  id="MvTypedHandler" />
    <enterHandlerDelegate implementation="org.move.ide.typing.MvEnterInLineCommentHandler"
                          id="MvEnterInLineComments" />
    <backspaceHandlerDelegate implementation="org.move.ide.typing.MvAngleBracketsBackspaceHandler"
                              id="MvAngleBracketsBackspaceHandler" />

    <lang.formatter language="Move"
                    implementationClass="org.move.ide.formatter.MvFormattingModelBuilder" />
    <formattingService implementation="org.move.cli.externalFormatter.MovefmtFormattingService" />

    <langCodeStyleSettingsProvider
        implementation="org.move.ide.formatter.settings.MvLanguageCodeStyleSettingsProvider" />

    <lang.foldingBuilder language="Move" implementationClass="org.move.ide.folding.MvFoldingBuilder" />

    <lang.namesValidator language="Move"
                         implementationClass="org.move.ide.refactoring.MvNamesValidator" />
    <lang.refactoringSupport language="Move"
                             implementationClass="org.move.ide.refactoring.MvRefactoringSupportProvider" />

    <!--        <lang.refactoringSupport language="TOML"-->
    <!--                                 implementationClass="org.move.ide.refactoring.toml.TomlRefactoringSupportProvider"/>-->
    <!--        <renameHandler implementation="org.move.ide.refactoring.toml.TomlInPlaceRenameHandler" />-->
    <!--        <renameHandler implementation="org.move.ide.refactoring.toml.TomlRenameHandler" />-->
    <!--        <renamePsiElementProcessor implementation="org.move.ide.refactoring.toml.MvRenameAddressProcessor"-->
    <!--                                   order="first"-->
    <!--                                   id="mvRenameAddressProcessor" />-->


    <lang.findUsagesProvider language="Move"
                             implementationClass="org.move.ide.search.MvFindUsagesProvider" />
    <usageTypeProvider
        implementation="org.move.ide.search.NamedAddressUsageTypeProvider" />
    <findUsagesHandlerFactory
        implementation="org.move.ide.search.NamedAddressFindUsagesHandlerFactory" />

    <completion.confidence language="Move"
                           implementationClass="org.move.lang.core.completion.MvCompletionConfidence" />
    <completion.contributor language="Move"
                            implementationClass="org.move.lang.core.completion.KeywordCompletionContributor" />
    <completion.contributor language="Move"
                            implementationClass="org.move.lang.core.completion.CommonCompletionContributor" />
    <completion.contributor language="Move"
                            implementationClass="org.move.lang.core.completion.MoveTextFieldCompletionContributor" />
    <completion.contributor language="TOML"
                            implementationClass="org.move.toml.completion.MoveTomlCompletionContributor" />
    <weigher key="completion"
             implementationClass="com.intellij.codeInsight.completion.PriorityWeigher"
             id="priority"
             order="first" />

    <psi.referenceContributor language="TOML"
                              implementation="org.move.toml.MoveTomlReferenceContributor" />
    <psi.referenceContributor language="Move"
                              implementation="org.move.toml.NamedAddressReferenceContributor" />

    <annotator language="Move"
               implementationClass="org.move.ide.annotator.MvErrorAnnotator" />
    <annotator language="Move"
               implementationClass="org.move.ide.annotator.MvSyntaxErrorAnnotator" />
    <annotator language="Move"
               implementationClass="org.move.ide.annotator.HighlightingAnnotator" />

    <highlightingPassFactory implementation="org.move.ide.annotator.RsHighlightingPassFactoryRegistrar" />

    <annotator language="TOML"
               implementationClass="org.move.toml.MoveTomlErrorAnnotator" />

    <codeInsight.parameterInfo language="Move"
                               implementationClass="org.move.ide.hints.paramInfo.CompositeParameterInfoHandler" />
    <codeInsight.parameterInfo language="Move"
                               implementationClass="org.move.ide.hints.StructLitFieldsInfoHandler" />
    <codeInsight.parameterNameHints language="Move"
                                    implementationClass="org.move.ide.hints.MvInlayParameterHintsProvider" />

<!--    <codeInsight.inlayProvider language="Move"-->
<!--                               implementationClass="org.move.ide.hints.type.MvInlayTypeHintsProvider" />-->
    <codeInsight.declarativeInlayProvider group="TYPES_GROUP"
                                          implementationClass="org.move.ide.hints.type.MvTypeInlayHintsProvider2"
                                          isEnabledByDefault="true"
                                          language="Move"
                                          providerId="org.move.hints.types"
                                          nameKey="inlay.hints.types"/>

    <defaultLiveTemplates file="liveTemplates/Move.xml" />
    <liveTemplateContext
        implementation="org.move.ide.liveTemplates.MvContextType$Generic"
        contextId="MOVE_FILE"
        baseContextId="OTHER" />
    <liveTemplateContext
        implementation="org.move.ide.liveTemplates.MvContextType$Module"
        contextId="MOVE_MODULE"
        baseContextId="MOVE_FILE" />
    <liveTemplateContext
        implementation="org.move.ide.liveTemplates.MvContextType$Block"
        contextId="MOVE_BLOCK"
        baseContextId="MOVE_FILE" />
    <liveTemplateContext
        implementation="org.move.ide.liveTemplates.MvContextType$Type"
        contextId="MOVE_TYPE"
        baseContextId="MOVE_FILE" />

    <renamePsiElementProcessor implementation="org.move.ide.refactoring.MvRenameProcessor"
                               order="first"
                               id="mvRenameProcessor" />
    <renamePsiElementProcessor implementation="org.move.ide.refactoring.MvRenameFileProcessor"
                               order="before renamePsiFile"
                               id="mvRenamePsiFileProcessor" />
    <lang.psiStructureViewFactory
        language="Move"
        implementationClass="org.move.ide.structureView.MvPsiStructureViewFactory" />

    <declarationRangeHandler
        key="org.move.lang.core.psi.MvModule"
        implementationClass="org.move.ide.hints.ModuleDeclarationRangeHandler" />
    <declarationRangeHandler
        key="org.move.lang.core.psi.MvFunction"
        implementationClass="org.move.ide.hints.FunctionDeclarationRangeHandler" />

    <breadcrumbsInfoProvider implementation="org.move.ide.MvBreadcrumbsProvider" />

    <toolWindow id="Aptos"
                anchor="right"
                factoryClass="org.move.cli.toolwindow.AptosToolWindowFactory"
                icon="/icons/aptos.svg" />

    <statusBarWidgetFactory id="moveExternalLinterWidget"
                            implementation="org.move.cli.externalLinter.RsExternalLinterWidgetFactory"
                            order="first" />


    <!--        <localInspection language="Move" groupPath="Move" groupName="Naming"-->
    <!--                         displayName="Attempt to override a built-in function"-->
    <!--                         enabledByDefault="true" level="ERROR"-->
    <!--                         implementationClass="org.move.ide.inspections.lints.FunctionNamingInspection"/>-->
    <localInspection language="Move" groupName="Move"
                     displayName="Unresolved reference"
                     enabledByDefault="true"
                     level="ERROR"
                     implementationClass="org.move.ide.inspections.MvUnresolvedReferenceInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Field initialization shorthand"
                     enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="org.move.ide.inspections.MvFieldInitShorthandInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Invalid module declaration"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.move.ide.inspections.MvInvalidModuleDeclarationInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Constant naming convention"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvConstNamingInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Struct naming convention"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvStructNamingInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Function naming convention"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvFunctionNamingInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Local variable naming convention"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvLocalBindingNamingInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Type checking"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.move.ide.inspections.MvTypeCheckInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Missing acquires"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.move.ide.inspections.MvMissingAcquiresInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Unused acquires"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvUnusedAcquiresTypeInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Unused struct type parameter"
                     enabledByDefault="true" level="ERROR"
                     implementationClass="org.move.ide.inspections.MvPhantomTypeParameterInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Unused import"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvUnusedImportInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Unused declaration"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvUnusedVariableInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Unused test signer"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvUnusedTestSignerInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Redundant type cast"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="org.move.ide.inspections.MvRedundantTypeCastInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Convert to method call"
                     enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="org.move.ide.inspections.compilerV2.MvReplaceWithMethodCallInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Convert to index expr"
                     enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="org.move.ide.inspections.compilerV2.MvReplaceWithIndexExprInspection" />
    <localInspection language="Move" groupName="Move"
                     displayName="Convert to compound expr"
                     enabledByDefault="true" level="WEAK WARNING"
                     implementationClass="org.move.ide.inspections.compilerV2.MvReplaceWithCompoundAssignmentInspection" />

    <!--  cannot be run on-the-fly, therefore enabled  -->
    <globalInspection language="Move" groupName="Move"
                      enabledByDefault="true" level="ERROR"
                      implementationClass="org.move.ide.inspections.MvExternalLinterInspection"
                      displayName="External linter" />

    <!-- Color Settings -->
    <colorSettingsPage implementation="org.move.ide.colors.MvColorSettingsPage" />

    <extendWordSelectionHandler implementation="org.move.ide.wordSelection.MvListSelectionHandler" />
    <extendWordSelectionHandler implementation="org.move.ide.wordSelection.MvTypeParamBoundListHandler" />
    <extendWordSelectionHandler implementation="org.move.ide.wordSelection.MvStringSelectionHandler" />

    <additionalTextAttributes scheme="Default" file="colors/MoveDefault.xml" />
    <additionalTextAttributes scheme="Darcula" file="colors/MoveDarcula.xml" />

    <!-- Project Creation -->
    <projectOpenProcessor id="Move" implementation="org.move.ide.newProject.MoveLangProjectOpenProcessor" />
    <directoryProjectGenerator implementation="org.move.ide.newProject.MoveProjectGenerator" />

    <postStartupActivity
        implementation="org.move.ide.newProject.projectActivity.AlwaysRefreshProjectsAfterOpen" />
    <!--     background = 5 seconds delayed  -->
    <!--    <postStartupActivity-->
    <!--        implementation="org.move.cli.openProject.CreateDefaultCompileRunConfiguration" />-->


    <projectConfigurable instance="org.move.cli.settings.PerProjectAptosConfigurable"
                         displayName="Aptos"
                         groupId="language"
                         id="language.move" />

    <projectConfigurable instance="org.move.cli.externalLinter.MvExternalLinterConfigurable"
                         parentId="language.move"
                         id="language.move.compiler.check"
                         displayName="External Linters" />
    <projectConfigurable instance="org.move.cli.externalFormatter.MovefmtConfigurable"
                         parentId="language.move"
                         id="language.move.movefmt"
                         displayName="Movefmt" />

    <projectService serviceInterface="org.move.utils.ProjectRootService"
                    serviceImplementation="org.move.utils.ProjectRootServiceImpl"
                    testServiceImplementation="org.move.utils.TestProjectRootServiceImpl" />

    <projectService serviceImplementation="org.move.cli.MoveProjectsService" />
    <!--        <projectService serviceImplementation="org.move.cli.packages.MovePackageService"/>-->

    <!--        <projectService serviceInterface="com.intellij.openapi.externalSystem.autoimport.ExternalSystemProjectTracker"-->
    <!--                        serviceImplementation="org.move.cli.externalSystem.MoveExternalSystemProjectAware"-->
    <!--                        overrides="true" />-->
    <!--        <applicationService serviceImplementation="org.move.openapiext.OpenSSLInfoService" />-->

    <additionalLibraryRootsProvider implementation="org.move.cli.BuildLibraryRootsProvider" />

    <!-- Notifications -->
    <notificationGroup id="Move Language" displayType="BALLOON" />
    <notificationGroup id="Move Compile Log" displayType="NONE" />
    <editorNotificationProvider
        implementation="org.move.ide.notifications.InvalidAptosCliConfigurationNotification" />
    <editorNotificationProvider
        implementation="org.move.ide.notifications.NoAptosProjectDetectedNotification" />

    <intentionAction>
      <language>Move</language>
      <className>org.move.ide.intentions.RemoveCurlyBracesIntention</className>
      <category>Move</category>
    </intentionAction>
    <!--    <intentionAction>-->
    <!--      <language>Move</language>-->
    <!--      <className>org.move.ide.intentions.InlineAddressBlockIntention</className>-->
    <!--      <category>Move</category>-->
    <!--    </intentionAction>-->
    <intentionAction>
      <language>Move</language>
      <className>org.move.ide.intentions.ChopParameterListIntention</className>
      <category>Move</category>
    </intentionAction>
    <intentionAction>
      <language>Move</language>
      <className>org.move.ide.intentions.ChopValueArgumentListIntention</className>
      <category>Move</category>
    </intentionAction>
    <intentionAction>
      <language>Move</language>
      <className>org.move.ide.intentions.ChopAttrArgumentListIntention</className>
      <category>Move</category>
    </intentionAction>
    <intentionAction>
      <language>Move</language>
      <className>org.move.ide.intentions.ChopStructLiteralIntention</className>
      <category>Move</category>
    </intentionAction>

    <errorHandler implementation="org.move.cli.sentryReporter.SentryErrorReporter" />

    <registryKey key="org.move.debug.enabled"
                 defaultValue="false"
                 restartRequired="false"
                 description="Enable debug mode for Move" />
    <registryKey key="org.move.types.highlight.unknown.as.error"
                 defaultValue="false"
                 restartRequired="false"
                 description="Show any TyUnknown type as error in the TypeCheckInspection" />
    <registryKey key="org.move.external.linter.max.duration"
                 defaultValue="3000"
                 restartRequired="false"
                 description="Show notification warning if the external linter is running longer than the set value (ms)" />
    <registryKey key="org.move.aptos.bundled.force.supported"
                 defaultValue="false"
                 restartRequired="false"
                 description="Force-enable support for pre-compiled bundled Aptos CLI (imitate non-MacOS)" />
    <registryKey key="org.move.aptos.bundled.force.unsupported"
                 defaultValue="false"
                 restartRequired="false"
                 description="Force-disable support for pre-compiled bundled Aptos CLI (imitate MacOS)" />

    <advancedSetting
        id="org.move.aptos.test.tool.window"
        default="false"
        groupKey="advanced.setting.aptos.group"
        descriptionKey="advanced.setting.org.move.aptos.test.tool.window.description"
    />
    <advancedSetting
        id="org.move.aptos.compile.message.json"
        default="false"
        groupKey="advanced.setting.aptos.group"
        descriptionKey="advanced.setting.org.move.aptos.compile.message.json.description"
    />

  </extensions>


  <projectListeners>
    <listener class="org.move.ide.notifications.UpdateNotificationsOnSettingsChangeListener"
              topic="org.move.cli.settings.MvProjectSettingsServiceBase$MoveSettingsListener"
              activeInTestMode="false" />
    <listener class="org.move.cli.externalLinter.RsExternalLinterWidgetUpdater"
              topic="org.move.cli.MoveProjectsService$MoveProjectsListener" />
  </projectListeners>

  <actions>
    <action id="Move.NewMoveFile"
            class="org.move.ide.actions.CreateMoveFileAction"
            text="Move File"
            description="Create new Move file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile" />
    </action>
    <action id="Move.RefreshAllProjects"
            description="Update Move project information"
            text="Update Move Projects"
            class="org.move.ide.actions.RefreshMoveProjectsAction"
            icon="AllIcons.Actions.Refresh" />
    <action id="Move.DownloadAptos"
            text="Download Aptos CLI"
            description="Download aptos-cli executable from Github"
            class="org.move.ide.actions.DownloadAptosSDKAction"
            icon="AllIcons.Actions.Download" />

    <action id="Move.RunExternalLinter"
            class="org.move.ide.actions.MvRunExternalLinterAction"
            icon="/icons/externalLinter.svg">
    </action>
    <action id="Move.ShowSettings"
            class="org.move.ide.actions.MoveEditSettingsAction"
            icon="AllIcons.General.Settings">
    </action>
    <action id="Move.FetchAptosPackage"
            class="org.move.bytecode.FetchAptosPackageAction"
            icon="AllIcons.Actions.Download">
    </action>

    <action id="Move.DecompileAptosMvFile"
            class="org.move.bytecode.DecompileAptosMvFileAction">
      <add-to-group group-id="ProjectViewPopupMenu" />
    </action>

    <group id="Move.Aptos">
      <reference id="Move.RefreshAllProjects" />
      <separator />
      <reference id="Move.RunExternalLinter" />
      <separator />
      <reference id="ExpandAll" />
      <reference id="CollapseAll" />
      <separator />
      <reference id="Move.FetchAptosPackage" />
      <separator />
      <reference id="Move.ShowSettings" />
    </group>
  </actions>
</idea-plugin>
